# helm install argocd -n argocd -f argocd/dev-values.yaml argo/argo-cd --create-namespace --wait

server:
  logFormat: json

  extraArgs: # To avoid internal redirection loops from HTTP to HTTPS
    - --insecure
  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
      alb.ingress.kubernetes.io/healthcheck-port: "443"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
      alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:089143290485:certificate/8f20bc85-876b-47a2-8c9f-27e9f5455ca9"
      external-dns.alpha.kubernetes.io/hostname: argo.so1s.io
    hosts:
      - argo.so1s.io
    tls: []
  service:
    type: NodePort
    annotations: {}

controller:
  logFormat: json

  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

dex:
  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

redis:
  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

repoServer:
  logFormat: json

  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

applicationSet:
  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

notification:
  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"

notifications:
  logFormat: json

  tolerations:
    - key: kind
      operator: "Equal"
      value: "api"
      effect: "NoSchedule"
